// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`lint Conditions If Object And invalid array value {"Fn::And":[""]} 1`] = `
Array [
  Object {
    "message": "must be a Boolean, got \\"\\"",
    "path": Array [
      "Root",
      "Conditions",
      "C",
      "Fn::And",
      "0",
    ],
  },
]
`;

exports[`lint Conditions If Object And invalid value {"Fn::And":""} 1`] = `
Array [
  Object {
    "message": "must be a List, got \\"\\"",
    "path": Array [
      "Root",
      "Conditions",
      "C",
      "Fn::And",
    ],
  },
]
`;

exports[`lint Conditions If Object If invalid input {"Fn::If":[{"Fn::Equals":["",""]}]} 1`] = `
Array [
  Object {
    "message": "must have three elements",
    "path": Array [
      "Root",
      "Conditions",
      "C",
      "Fn::If",
    ],
  },
]
`;

exports[`lint Conditions If Object If invalid ref {"Fn::If":[{"Fn::Equals":[{"Ref":"foo"},""]},"",""]} 1`] = `
Array [
  Object {
    "message": "foo is not a valid Parameter or Resource",
    "path": Array [
      "Root",
      "Conditions",
      "C",
      "Fn::If",
      "0",
      "Fn::Equals",
      "0",
      "Ref",
    ],
  },
]
`;

exports[`lint Conditions If Object Not invalid array value {"Fn::Not":[""]} 1`] = `
Array [
  Object {
    "message": "must be a Boolean, got \\"\\"",
    "path": Array [
      "Root",
      "Conditions",
      "C",
      "Fn::Not",
      "0",
    ],
  },
]
`;

exports[`lint Conditions If Object Not invalid value {"Fn::Not":""} 1`] = `
Array [
  Object {
    "message": "must be a List, got \\"\\"",
    "path": Array [
      "Root",
      "Conditions",
      "C",
      "Fn::Not",
    ],
  },
]
`;

exports[`lint Conditions If Object Not multiple inputs {"Fn::Not":[{"Fn::Equals":["",""]},{"Fn::Equals":["",""]}]} 1`] = `Array []`;

exports[`lint Conditions If Object Not single input {"Fn::Not":[{"Fn::Equals":["",""]}]} 1`] = `Array []`;

exports[`lint Conditions If Object Or invalid array value {"Fn::Or":[""]} 1`] = `
Array [
  Object {
    "message": "must be a Boolean, got \\"\\"",
    "path": Array [
      "Root",
      "Conditions",
      "C",
      "Fn::Or",
      "0",
    ],
  },
]
`;

exports[`lint Conditions If Object Or invalid value {"Fn::Or":""} 1`] = `
Array [
  Object {
    "message": "must be a List, got \\"\\"",
    "path": Array [
      "Root",
      "Conditions",
      "C",
      "Fn::Or",
    ],
  },
]
`;

exports[`lint Conditions If YAMLTag And invalid array value {"And":[""]} 1`] = `
Array [
  Object {
    "message": "must be a Boolean, got \\"\\"",
    "path": Array [
      "Root",
      "Conditions",
      "C",
      "And",
      "0",
    ],
  },
]
`;

exports[`lint Conditions If YAMLTag And invalid value {"And":""} 1`] = `
Array [
  Object {
    "message": "must be a List, got \\"\\"",
    "path": Array [
      "Root",
      "Conditions",
      "C",
      "And",
    ],
  },
]
`;

exports[`lint Conditions If YAMLTag If invalid input {"If":[{"Equals":["",""]}]} 1`] = `
Array [
  Object {
    "message": "must have three elements",
    "path": Array [
      "Root",
      "Conditions",
      "C",
      "If",
    ],
  },
]
`;

exports[`lint Conditions If YAMLTag If invalid ref {"If":[{"Equals":[{"Ref":"foo"},""]},"",""]} 1`] = `
Array [
  Object {
    "message": "foo is not a valid Parameter or Resource",
    "path": Array [
      "Root",
      "Conditions",
      "C",
      "If",
      "0",
      "Equals",
      "0",
      "Ref",
    ],
  },
]
`;

exports[`lint Conditions If YAMLTag Not invalid array value {"Not":[""]} 1`] = `
Array [
  Object {
    "message": "must be a Boolean, got \\"\\"",
    "path": Array [
      "Root",
      "Conditions",
      "C",
      "Not",
      "0",
    ],
  },
]
`;

exports[`lint Conditions If YAMLTag Not invalid value {"Not":""} 1`] = `
Array [
  Object {
    "message": "must be a List, got \\"\\"",
    "path": Array [
      "Root",
      "Conditions",
      "C",
      "Not",
    ],
  },
]
`;

exports[`lint Conditions If YAMLTag Not multiple inputs {"Not":[{"Equals":["",""]},{"Equals":["",""]}]} 1`] = `Array []`;

exports[`lint Conditions If YAMLTag Not single input {"Not":[{"Equals":["",""]}]} 1`] = `Array []`;

exports[`lint Conditions If YAMLTag Or invalid array value {"Or":[""]} 1`] = `
Array [
  Object {
    "message": "must be a Boolean, got \\"\\"",
    "path": Array [
      "Root",
      "Conditions",
      "C",
      "Or",
      "0",
    ],
  },
]
`;

exports[`lint Conditions If YAMLTag Or invalid value {"Or":""} 1`] = `
Array [
  Object {
    "message": "must be a List, got \\"\\"",
    "path": Array [
      "Root",
      "Conditions",
      "C",
      "Or",
    ],
  },
]
`;

exports[`lint Mappings empty 1`] = `Array []`;

exports[`lint Mappings empty object {} 1`] = `Array []`;

exports[`lint Mappings invalid type {"a":{"b":{"d":[]}}} 1`] = `
Array [
  Object {
    "message": "must be a String, got []",
    "path": Array [
      "Root",
      "Mappings",
      "a",
      "b",
      "d",
    ],
  },
]
`;

exports[`lint Mappings invalid type 1`] = `
Array [
  Object {
    "message": "must be an Object, got \\"\\"",
    "path": Array [
      "Root",
      "Mappings",
    ],
  },
]
`;

exports[`lint Mappings object {"a":{"b":""}} 1`] = `
Array [
  Object {
    "message": "must be an Object, got \\"\\"",
    "path": Array [
      "Root",
      "Mappings",
      "a",
      "b",
    ],
  },
]
`;

exports[`lint Mappings object {"a":{"b":{"c":"d"}}} 1`] = `Array []`;

exports[`lint Outputs description {"Value":"v","Description":"d"} 1`] = `Array []`;

exports[`lint Outputs empty 1`] = `Array []`;

exports[`lint Outputs export {"Value":"v","Export":{"Name":"n"}} 1`] = `Array []`;

exports[`lint Outputs invalid type 1`] = `
Array [
  Object {
    "message": "must be an Object, got \\"\\"",
    "path": Array [
      "Root",
      "Outputs",
    ],
  },
]
`;

exports[`lint Outputs invalid type description {"Value":"v","Description":{}} 1`] = `
Array [
  Object {
    "message": "must be a String, got {}",
    "path": Array [
      "Root",
      "Outputs",
      "O",
      "Description",
    ],
  },
]
`;

exports[`lint Outputs invalid type export {"Value":"v","Export":{"Name":{}}} 1`] = `
Array [
  Object {
    "message": "must be a String, got {}",
    "path": Array [
      "Root",
      "Outputs",
      "O",
      "Export",
      "Name",
    ],
  },
]
`;

exports[`lint Outputs invalid type value {"Value":{}} 1`] = `
Array [
  Object {
    "message": "must be a String, got {}",
    "path": Array [
      "Root",
      "Outputs",
      "O",
      "Value",
    ],
  },
]
`;

exports[`lint Outputs missing export name {"Value":"v","Export":{}} 1`] = `
Array [
  Object {
    "message": "is required",
    "path": Array [
      "Root",
      "Outputs",
      "O",
      "Export",
      "Name",
    ],
  },
]
`;

exports[`lint Outputs value {"Value":"v"} 1`] = `Array []`;

exports[`lint Resources Base64 Object Ref with invalid resource {"Fn::Base64":{"Ref":"Nothing"}} 1`] = `
Array [
  Object {
    "message": "Nothing is not a valid Parameter or Resource",
    "path": Array [
      "Root",
      "Resources",
      "Bucket",
      "Properties",
      "BucketName",
      "Fn::Base64",
      "Ref",
    ],
  },
]
`;

exports[`lint Resources Base64 YAMLTag Ref with invalid resource {"Base64":{"Ref":"Nothing"}} 1`] = `
Array [
  Object {
    "message": "Nothing is not a valid Parameter or Resource",
    "path": Array [
      "Root",
      "Resources",
      "Bucket",
      "Properties",
      "BucketName",
      "Base64",
      "Ref",
    ],
  },
]
`;

exports[`lint Resources GetAtt invalid attribute YAMLTag {"GetAtt":"A.Bar"} 1`] = `
Array [
  Object {
    "message": "Bar is not a valid attribute of A",
    "path": Array [
      "Root",
      "Resources",
      "Bucket",
      "Properties",
      "BucketName",
      "GetAtt",
    ],
  },
]
`;

exports[`lint Resources GetAtt invalid resource Object {"Fn::GetAtt":["A","Cat"]} 1`] = `
Array [
  Object {
    "message": "Cat is not a valid attribute of A",
    "path": Array [
      "Root",
      "Resources",
      "Bucket",
      "Properties",
      "BucketName",
      "Fn::GetAtt",
    ],
  },
]
`;

exports[`lint Resources GetAtt invalid resource YAMLTag {"GetAtt":"Blag.Arn"} 1`] = `
Array [
  Object {
    "message": "Blag is not a valid Resource",
    "path": Array [
      "Root",
      "Resources",
      "Bucket",
      "Properties",
      "BucketName",
      "GetAtt",
    ],
  },
]
`;

exports[`lint Resources GetAtt invalid resource YAMLTag {"GetAtt":["A","Cat"]} 1`] = `
Array [
  Object {
    "message": "Cat is not a valid attribute of A",
    "path": Array [
      "Root",
      "Resources",
      "Bucket",
      "Properties",
      "BucketName",
      "GetAtt",
    ],
  },
]
`;

exports[`lint Resources GetAtt invalid type {"Fn::GetAtt":["\${A}"]} 1`] = `
Array [
  Object {
    "message": "must be a List of two Strings",
    "path": Array [
      "Root",
      "Resources",
      "Bucket",
      "Properties",
      "BucketName",
      "Fn::GetAtt",
    ],
  },
]
`;

exports[`lint Resources GetAtt invalid type {"Fn::GetAtt":[{},"\${A}"]} 1`] = `
Array [
  Object {
    "message": "must be a List of two Strings",
    "path": Array [
      "Root",
      "Resources",
      "Bucket",
      "Properties",
      "BucketName",
      "Fn::GetAtt",
    ],
  },
]
`;

exports[`lint Resources GetAtt invalid type {"Fn::GetAtt":{}} 1`] = `
Array [
  Object {
    "message": "must be a List of two Strings",
    "path": Array [
      "Root",
      "Resources",
      "Bucket",
      "Properties",
      "BucketName",
      "Fn::GetAtt",
    ],
  },
]
`;

exports[`lint Resources GetAtt invalid type {"GetAtt":{}} 1`] = `
Array [
  Object {
    "message": "must be a String or a List of two Strings",
    "path": Array [
      "Root",
      "Resources",
      "Bucket",
      "Properties",
      "BucketName",
      "GetAtt",
    ],
  },
]
`;

exports[`lint Resources Ref Object invalid resource {"Ref":"Blag"} 1`] = `
Array [
  Object {
    "message": "Blag is not a valid Parameter or Resource",
    "path": Array [
      "Root",
      "Resources",
      "Bucket",
      "Properties",
      "BucketName",
      "Ref",
    ],
  },
]
`;

exports[`lint Resources Ref Object invalid type {"Ref":["A"]} 1`] = `
Array [
  Object {
    "message": "must be a String, got [\\"A\\"]",
    "path": Array [
      "Root",
      "Resources",
      "Bucket",
      "Properties",
      "BucketName",
      "Ref",
    ],
  },
]
`;

exports[`lint Resources Ref YAMLTag invalid resource {"Ref":"Blag"} 1`] = `
Array [
  Object {
    "message": "Blag is not a valid Parameter or Resource",
    "path": Array [
      "Root",
      "Resources",
      "Bucket",
      "Properties",
      "BucketName",
      "Ref",
    ],
  },
]
`;

exports[`lint Resources Ref YAMLTag invalid type {"Ref":["A"]} 1`] = `
Array [
  Object {
    "message": "must be a String, got [\\"A\\"]",
    "path": Array [
      "Root",
      "Resources",
      "Bucket",
      "Properties",
      "BucketName",
      "Ref",
    ],
  },
]
`;

exports[`lint Resources Sub Object invalid attribute {"Fn::Sub":"\${A.Bar}"} 1`] = `
Array [
  Object {
    "message": "Bar is not a valid Attribute of A",
    "path": Array [
      "Root",
      "Resources",
      "Bucket",
      "Properties",
      "BucketName",
      "Fn::Sub",
    ],
  },
]
`;

exports[`lint Resources Sub Object invalid resource {"Fn::Sub":"\${Blag}"} 1`] = `
Array [
  Object {
    "message": "Blag not a valid Parameter or Resource",
    "path": Array [
      "Root",
      "Resources",
      "Bucket",
      "Properties",
      "BucketName",
      "Fn::Sub",
    ],
  },
]
`;

exports[`lint Resources Sub Object invalid type {"Fn::Sub":["\${A}"]} 1`] = `
Array [
  Object {
    "message": "must be a String or List of Sting and Map",
    "path": Array [
      "Root",
      "Resources",
      "Bucket",
      "Properties",
      "BucketName",
      "Fn::Sub",
    ],
  },
]
`;

exports[`lint Resources Sub Object invalid type {"Fn::Sub":[{},"\${A}"]} 1`] = `
Array [
  Object {
    "message": "must be a String, got {}",
    "path": Array [
      "Root",
      "Resources",
      "Bucket",
      "Properties",
      "BucketName",
      "Fn::Sub",
      "0",
    ],
  },
  Object {
    "message": "must be an Object, got \\"\${A}\\"",
    "path": Array [
      "Root",
      "Resources",
      "Bucket",
      "Properties",
      "BucketName",
      "Fn::Sub",
      "1",
    ],
  },
]
`;

exports[`lint Resources Sub Object invalid type {"Fn::Sub":{}} 1`] = `
Array [
  Object {
    "message": "must be a String or List of Sting and Map",
    "path": Array [
      "Root",
      "Resources",
      "Bucket",
      "Properties",
      "BucketName",
      "Fn::Sub",
    ],
  },
]
`;

exports[`lint Resources Sub Object multiple with invalid resource {"Fn::Sub":"a\${Bar}b\${B}"} 1`] = `
Array [
  Object {
    "message": "Bar not a valid Parameter or Resource",
    "path": Array [
      "Root",
      "Resources",
      "Bucket",
      "Properties",
      "BucketName",
      "Fn::Sub",
    ],
  },
]
`;

exports[`lint Resources Sub YAMLTag invalid attribute {"Sub":"\${A.Bar}"} 1`] = `
Array [
  Object {
    "message": "Bar is not a valid Attribute of A",
    "path": Array [
      "Root",
      "Resources",
      "Bucket",
      "Properties",
      "BucketName",
      "Sub",
    ],
  },
]
`;

exports[`lint Resources Sub YAMLTag invalid resource {"Sub":"\${Blag}"} 1`] = `
Array [
  Object {
    "message": "Blag not a valid Parameter or Resource",
    "path": Array [
      "Root",
      "Resources",
      "Bucket",
      "Properties",
      "BucketName",
      "Sub",
    ],
  },
]
`;

exports[`lint Resources Sub YAMLTag invalid type {"Sub":["\${A}"]} 1`] = `
Array [
  Object {
    "message": "must be a String or List of Sting and Map",
    "path": Array [
      "Root",
      "Resources",
      "Bucket",
      "Properties",
      "BucketName",
      "Sub",
    ],
  },
]
`;

exports[`lint Resources Sub YAMLTag invalid type {"Sub":[{},"\${A}"]} 1`] = `
Array [
  Object {
    "message": "must be a String, got {}",
    "path": Array [
      "Root",
      "Resources",
      "Bucket",
      "Properties",
      "BucketName",
      "Sub",
      "0",
    ],
  },
  Object {
    "message": "must be an Object, got \\"\${A}\\"",
    "path": Array [
      "Root",
      "Resources",
      "Bucket",
      "Properties",
      "BucketName",
      "Sub",
      "1",
    ],
  },
]
`;

exports[`lint Resources Sub YAMLTag invalid type {"Sub":{}} 1`] = `
Array [
  Object {
    "message": "must be a String or List of Sting and Map",
    "path": Array [
      "Root",
      "Resources",
      "Bucket",
      "Properties",
      "BucketName",
      "Sub",
    ],
  },
]
`;

exports[`lint Resources Sub YAMLTag multiple with invalid resource {"Sub":"a\${Bar}b\${B}"} 1`] = `
Array [
  Object {
    "message": "Bar not a valid Parameter or Resource",
    "path": Array [
      "Root",
      "Resources",
      "Bucket",
      "Properties",
      "BucketName",
      "Sub",
    ],
  },
]
`;
